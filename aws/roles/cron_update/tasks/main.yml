---

- name: install cronie
  become: true
  yum: name=cronie state=present

- name: start crond
  become: true
  service: name=crond state=started enabled=true

# use extra_args to ensure ansible-playbook in in /usr/bin so cron can find it
- name: install ansible
  become: true
  yum: enablerepo=epel name=ansible state=present

- name: install fxa-dev
  become: true
  git: repo={{ fxadev_git_repo }}
       dest=/data/fxa-dev
       version={{ fxadev_git_version }}
       force=true

- name: disable requiretty in /etc/sudoers
  become: true
  lineinfile: dest=/etc/sudoers state=absent regexp='Defaults\s+requiretty' validate='visudo -cf %s'

# TODO make the permissions non-ec2 specific
- name: ensure /var/log/ansible directory
  file: path=/var/log/ansible state=directory owner=ec2-user group=ec2-user
  become: true

# TODO the job should be a shell script that can try to recover from errors
- name: cron update
  cron: name="fxa update"
        weekday={{ cron_time.weekday | default('*') }}
        month={{ cron_time.month | default('*') }}
        day={{ cron_time.day | default('*') }}
        hour={{ cron_time.hour | default('*') }}
        minute={{ cron_time.minute | default('*/2') }}
        job="cd /data/fxa-dev/aws; PYTHONUNBUFFERED=1 /usr/bin/lckdo -x /var/tmp/ansible-update.lck /usr/bin/ansible-playbook -i localhost, local.yml --extra-vars \"stack_name={{ stack_name }} auth_sns_arn={{ auth_sns_arn }} basket_queue_url={{ basket_queue_url }} oauth_queue_url={{ oauth_queue_url }} profile_queue_url={{ profile_queue_url }} profile_update_queue_url={{ profile_update_queue_url | default('') }} customs_ban_queue_url={{ customs_ban_queue_url }}\" > /var/log/ansible/update.log"
