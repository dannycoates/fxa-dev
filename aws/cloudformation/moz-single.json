{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Single machine Fxa Dev environment",

  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the web server",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    "ConfigName": {
      "Description" : "Original input argument for stack_name",
      "Type": "String",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    "BranchName": {
      "Description" : "Git branch of fxa-dev to use",
      "Type": "String",
      "Default": "master",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    "HostedZone" : {
      "Type": "String",
      "Description" : "The DNS name of an existing Amazon Route 53 hosted zone"
    },
    "Subdomain" : {
      "Type": "String",
      "Description" : "subdomain"
    },
    "SSLCertificateName": {
      "Type": "String",
      "Description": "SSL Cert name from IAM"
    },
    "CDNSSLCertificateId": {
      "Type": "String",
      "Description": "Cloudfront CDN SSL Cert ID from IAM"
    },
    "EC2InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m3.xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "EC2VolumeSize": {
      "Description": "EC2 volume size (GB)",
      "Type": "String",
      "Default": "8",
      "AllowedValues": [
        "8",
        "16",
        "24",
        "32",
        "40"
      ]
    }
  },

  "Mappings" : {
    "RegionMap" : {
      "us-east-1"      : { "AMI" : "ami-0b33d91d" },
      "us-west-1"      : { "AMI" : "ami-165a0876" },
      "us-west-2"      : { "AMI" : "ami-f173cc91" },
      "eu-west-1"      : { "AMI" : "ami-70edb016" },
      "eu-central-1"   : { "AMI" : "ami-af0fc0c0" },
      "ap-southeast-1" : { "AMI" : "ami-dc9339bf" },
      "ap-northeast-1" : { "AMI" : "ami-56d4ad31" },
      "ap-southeast-2" : { "AMI" : "ami-dac312b4" },
      "sa-east-1"      : { "AMI" : "ami-80086dec" }
    }
  },

  "Resources" : {

    "FxaDevSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Fxa Dev",
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22", "ToPort" : "22",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "1443", "ToPort" : "1443",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80", "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          }
        ]
      }
    },

    "FxaDevELBSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Fxa Dev ELB",
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "443", "ToPort" : "443",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80", "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          }
        ]
      }
    },

    "FxaIAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument":{
           "Statement":[
              {
                "Effect":"Allow",
                "Principal":{ "Service":[ "ec2.amazonaws.com" ] },
                "Action":[ "sts:AssumeRole" ]
              }
           ]
        },
        "Path": "/fxa/",
        "Policies": [
          {
            "PolicyName":"PuppetConfigDeployIAMRequirements",
            "PolicyDocument":{
             "Version":"2012-10-17",
             "Statement":[
               {
                  "Effect":"Allow",
                  "Action":[ "S3:ListBucket", "S3:GetObject" ],
                  "Resource": [
                      "arn:aws:s3:::net.mozaws.ops.hiera-secrets",
                      "arn:aws:s3:::net.mozaws.prod.ops.rpmrepo-protected",
                      "arn:aws:s3:::net.mozaws.ops.rpmrepo-puppet"
                  ]
               },
               {
                  "Effect":"Allow",
                  "Action":[ "S3:GetObject" ],
                  "Resource":[
                    "arn:aws:s3:::net.mozaws.ops.rpmrepo-protected/*",
                    "arn:aws:s3:::net.mozaws.ops.rpmrepo-puppet/*",
                    "arn:aws:s3:::net.mozaws.ops.hiera-secrets/common.yaml",
                    "arn:aws:s3:::net.mozaws.ops.hiera-secrets/env/dev.yaml",
                    "arn:aws:s3:::net.mozaws.ops.hiera-secrets/type/fxa.auth_server.dev.yaml",
                    "arn:aws:s3:::net.mozaws.ops.hiera-secrets/app/fxa.dev.yaml"
                  ]
               },
               { "Effect":"Allow", "Action": [ "ec2:DescribeTags" ], "Resource": "*" },
               { "Effect":"Allow", "Action": [ "elasticache:DescribeCacheClusters" ], "Resource": "*" }
             ]
            }
          }
        ]
      }
    },

    "FxaInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/fxa/",
        "Roles": [{ "Ref": "FxaIAMRole" }]
      }
    },

    "FxaEc2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "KeyName" : { "Ref" : "KeyName" },
        "IamInstanceProfile": { "Ref": "FxaInstanceProfile" },
        "InstanceType" : { "Ref": "EC2InstanceType" },
        "SecurityGroups" : [{ "Ref" : "FxaDevSecurityGroup" }],
        "UserData": { "Fn::Base64": { "Fn::Join": ["",
          [
            "#!/bin/bash -ex", 
            "\n", "echo Defaults:ec2-user \\!requiretty >> /etc/sudoers;",
            "\n", "time yum -y --security update",
            "\n", "time yum -y erase sendmail",
            "\n", "time yum -y install cronie docker emacs-nox gcc-c++ git lsof memcached mysql nginx ntp postfix python-pip rsyslog strace tmux",
            "\n", "time yum -y --enablerepo=epel install ansible moreutils",
            "\n", "mkdir -p /data",
            "\n", "chmod 777 /data",
            "\n", "time git clone -b ", { "Ref": "BranchName"  }, " git://github.com/mozilla/fxa-dev.git /data/fxa-dev",
            "\n", "time service docker start",
            "\n", "date",
            "\n", "cd /data/fxa-dev/aws",
            "\n", "time ./docker-pull.sh",
            "\n", "PYTHONUNBUFFERED=1 time ansible-playbook -i localhost, local.yml",
            "  -e fxadev_git_version=",    { "Ref": "BranchName" },
            "  -e stack_name=",            { "Ref": "ConfigName" },
            "  -e auth_sns_arn=",          { "Ref": "FxaAccountChangeSNSTopic" },
            "  -e basket_queue_url=",      { "Ref": "FxaBasketAccountChangeQueue" },
            "  -e oauth_queue_url=",       { "Ref": "FxaOAuthAccountChangeQueue" },
            "  -e profile_queue_url=",     { "Ref": "FxaProfileAccountChangeQueue" },
            "  -e customs_ban_queue_url=", { "Ref": "FxaCustomsBanQueue" },
            "   | /usr/bin/ts %T",
            "\n"
          ]
        ]}},
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/xvda",
            "Ebs" : {
              "VolumeSize" : { "Ref": "EC2VolumeSize" },
              "VolumeType" : "gp2"
            }
          }
        ]
      }
    },

    "FxaELB":{
      "Type":"AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties":{
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "ConnectionDrainingPolicy":{ "Enabled" : true, "Timeout" : 15 },
        "HealthCheck":{
          "Target":"TCP:80",
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "2",
          "Interval": "15",
          "Timeout": "3"
        },
        "Listeners":[
          {
            "InstancePort":"1443",
            "LoadBalancerPort":"443",
            "PolicyNames" : ["ELBSecurityPolicy-2016-08"],
            "Protocol":"HTTPS",
            "SSLCertificateId":{
               "Fn::Join":[ "",
                  [
                    "arn:aws:iam::", { "Ref":"AWS::AccountId" }, ":server-certificate/", {"Ref" : "SSLCertificateName"}
                  ]
               ]
            }
          },
          {
            "InstancePort":"80",
            "LoadBalancerPort":"80",
            "Protocol":"HTTP"
          }
        ],
        "Instances": [{ "Ref" : "FxaEc2Instance" }],
        "SecurityGroups": [{ "Fn::GetAtt" : [ "FxaDevELBSecurityGroup", "GroupId" ] }]
      }
    },

    "FxaOAuthAccountChangeQueue": {
      "Type": "AWS::SQS::Queue"
    },

    "FxaProfileAccountChangeQueue": {
      "Type": "AWS::SQS::Queue"
    },

    "FxaBasketAccountChangeQueue": {
      "Type": "AWS::SQS::Queue"
    },

    "FxaAccountChangeSNSTopic": {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "Subscription" : [
          { "Endpoint" : { "Fn::GetAtt" : [ "FxaBasketAccountChangeQueue", "Arn" ] }, "Protocol" : "sqs" },
          { "Endpoint" : { "Fn::GetAtt" : [ "FxaOAuthAccountChangeQueue", "Arn" ] }, "Protocol" : "sqs" },
          { "Endpoint" : { "Fn::GetAtt" : [ "FxaProfileAccountChangeQueue", "Arn" ] }, "Protocol" : "sqs" }
        ]
      }
    },

    "FxaSNSTopicPolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument" :  {
           "Id" : "FxaSNSTopicPolicy",
           "Statement" : [ {
              "Sid" : "Allow-Publish-To-Everyone",
              "Effect" : "Allow",
              "Principal" : {
                 "AWS" : "*"
              },
              "Action" : "sns:Publish",
              "Resource" : "*"
           } ]
        },
        "Topics" : [ { "Ref" : "FxaAccountChangeSNSTopic" } ]
      }
    },

    "FxaOAuthAccountChangeQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "FxaOAuthAccountChangeQueuePolicy",
          "Statement": [
            {
              "Sid": "Allow-SendMessage-To-OAuthAccountChangeQueue-From-SNS",
              "Effect": "Allow",
              "Principal": {"AWS": "*"},
              "Action":["sqs:SendMessage"],
              "Resource": "*",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": { "Ref": "FxaAccountChangeSNSTopic" }
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {"AWS": "*"},
              "Action":["sqs:ReceiveMessage", "sqs:DeleteMessage"],
              "Resource": "*"
            }
          ]
        },
        "Queues": [{ "Ref" : "FxaOAuthAccountChangeQueue" }]
      }
    },

    "FxaBasketAccountChangeQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "FxaBasketAccountChangeQueuePolicy",
          "Statement": [
            {
              "Sid": "Allow-SendMessage-To-BasketAccountChangeQueue-From-SNS",
              "Effect": "Allow",
              "Principal": {"AWS": "*"},
              "Action":["sqs:SendMessage"],
              "Resource": "*",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": { "Ref": "FxaAccountChangeSNSTopic" }
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {"AWS": "*"},
              "Action":["sqs:ReceiveMessage", "sqs:DeleteMessage"],
              "Resource": "*"
            }
          ]
        },
        "Queues": [{ "Ref" : "FxaBasketAccountChangeQueue" }]
      }
    },

    "FxaProfileAccountChangeQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "FxaProfileAccountChangeQueuePolicy",
          "Statement": [
            {
              "Sid": "Allow-SendMessage-To-ProfileAccountChangeQueue-From-SNS",
              "Effect": "Allow",
              "Principal": {"AWS": "*"},
              "Action":["sqs:SendMessage"],
              "Resource": "*",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": { "Ref": "FxaAccountChangeSNSTopic" }
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {"AWS": "*"},
              "Action":["sqs:ReceiveMessage", "sqs:DeleteMessage"],
              "Resource": "*"
            }
          ]
        },
        "Queues": [{ "Ref" : "FxaProfileAccountChangeQueue" }]
      }
    },

    "FxaCustomsBanQueue": {
      "Type": "AWS::SQS::Queue"
    },

    "FxaCustomsBanQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "FxaCustomsBanQueuePolicy",
          "Statement": [
            {
              "Sid": "Allow-Send-To-CustomsBanQueue-From-Anywhere",
              "Effect": "Allow",
              "Principal": {"AWS": "*"},
              "Action":["sqs:SendMessage"],
              "Resource": "*"
            },
            {
              "Sid": "Allow-Read-From-CustomsBanQueue-From-Anywhere",
              "Effect": "Allow",
              "Principal": {"AWS": "*"},
              "Action":["sqs:ReceiveMessage", "sqs:DeleteMessage"],
              "Resource": "*"
            }
          ]
        },
        "Queues": [{ "Ref" : "FxaCustomsBanQueue" }]
      }
    },

    "FxaDNS": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "HostedZoneName" : { "Fn::Join" : [ "", [{"Ref" : "HostedZone"}, "." ]]},
        "RecordSets": [
          {
            "Name" : { "Fn::Join" : [ "", [{"Ref" : "Subdomain"}, ".", {"Ref" : "HostedZone"}, "."]]},
            "Type" : "A",
            "AliasTarget" : {
              "HostedZoneId" : { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneNameID" ] },
              "DNSName" : { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneName" ] }
            }
          },
          {
            "Name" : { "Fn::Join" : [ "", ["oauth-", {"Ref" : "Subdomain"}, ".", {"Ref" : "HostedZone"}, "."]]},
            "Type" : "A",
            "AliasTarget" : {
              "HostedZoneId" : { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneNameID" ] },
              "DNSName" : { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneName" ] }
            }
          },
          {
            "Name" : { "Fn::Join" : [ "", ["123done-", {"Ref" : "Subdomain"}, ".", {"Ref" : "HostedZone"}, "."]]},
            "Type" : "A",
            "AliasTarget" : {
              "HostedZoneId" : { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneNameID" ] },
              "DNSName" : { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneName" ] }
            }
          },
          {
            "Name" : { "Fn::Join" : [ "", ["321done-", {"Ref" : "Subdomain"}, ".", {"Ref" : "HostedZone"}, "."]]},
            "Type" : "A",
            "AliasTarget" : {
              "HostedZoneId" : { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneNameID" ] },
              "DNSName" : { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneName" ] }
            }
          },
          {
            "Name" : { "Fn::Join" : [ "", ["meta-", {"Ref" : "Subdomain"}, ".", {"Ref" : "HostedZone"}, "."]]},
            "Type": "A",
            "TTL": "30",
            "ResourceRecords" : [ { "Fn::GetAtt" : [ "FxaEc2Instance", "PublicIp" ] } ]
          }
        ]
      }
    }
  },

  "Outputs" : {
    "Instance" : {
      "Value" : { "Fn::GetAtt" : [ "FxaEc2Instance", "PublicDnsName" ] },
      "Description" : "DNS Name of the newly created EC2 instance"
    },
    "BasketAccountChangeQueueURL": {
      "Description": "Fxa Account Changes for the Basket API consumer",
      "Value": { "Ref": "FxaBasketAccountChangeQueue" }
    },
    "OAuthAccountChangeQueueURL": {
      "Description": "Fxa Account Changes for the OAuth consumer",
      "Value": { "Ref": "FxaOAuthAccountChangeQueue" }
    },
    "ProfileAccountChangeQueueURL": {
      "Description": "Fxa Account Changes for the Profile consumer",
      "Value": { "Ref": "FxaProfileAccountChangeQueue" }
    },
    "CustomsBanQueueURL": {
      "Description": "Fxa customs ban queue for use by mozdef",
      "Value": { "Ref": "FxaCustomsBanQueue" }
    },
    "SNS": {
      "Description": "Fxa Account Changes ARN",
      "Value": { "Ref": "FxaAccountChangeSNSTopic" }
    },
    "StaticResourceHost": {
      "Description": "Fxa Static Resource Host",
      "Value": { "Fn::Join" : [ "", ["static-", {"Ref" : "Subdomain"}, ".", {"Ref" : "HostedZone"}]]}
    },
    "ContentHost": {
      "Description": "Content server hostname",
      "Value": { "Fn::Join" : [ "", [ {"Ref" : "Subdomain"}, ".", {"Ref" : "HostedZone"} ] ] }
    },
    "ELB": {
      "Description": "The ELB",
      "Value": { "Fn::GetAtt":[ "FxaELB", "CanonicalHostedZoneName" ] }
    }
  }
}
