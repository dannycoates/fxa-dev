---

- file: path=/etc/nginx/conf.d/oauth_console/upstream state=directory
  become: true

- name: configure nginx upstream
  become: true
  template: src=upstream.conf.j2 dest=/etc/nginx/conf.d/oauth_console/upstream/http_fxa_oauth_console.conf
  notify: reload nginx config

- file: path=/etc/nginx/conf.d/oauth_console/location state=directory
  become: true

- name: configure nginx location
  become: true
  template: src=location.conf.j2 dest=/etc/nginx/conf.d/oauth_console/location/http_fxa_oauth_console.conf
  notify: reload nginx config

- name: install fxa-oauth-console
  tags: code
  become: true
  become_user: app
  git: repo={{ oauth_console_git_repo }}
       dest=/data/fxa-oauth-console
       version={{ oauth_console_git_version }}
       force=true
  notify:
    - install fxa-oauth-console dependencies
    - build fxa-oauth-console assets
    - restart fxa-oauth-console

- name: configure fxa-oauth-console
  become: true
  become_user: app
  template: src=config.json.j2 dest=/data/fxa-oauth-console/config/local.json
  notify: restart fxa-oauth-console

- name: supervise fxa-oauth-console
  become: true
  copy: src=fxa-oauth-console.conf dest=/etc/supervisor.d/fxa-oauth-console.conf
  notify: update supervisor

- name: start oauth-console docker container
  become: true
  docker_container:
      name: oauth-console
      image: mozilla/fxa-oauth-console{{ ':' + oauth_docker_tag }}
      state: "{{ oauth_console_docker_state }}"
      network_mode: host
      ports:
        - 10137:10137
      command: node bin/server.js
      volumes:
        - /data/config/oauth:/config:ro
    register: container

- meta: flush_handlers
