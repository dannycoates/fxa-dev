---

- name: configure nginx upstream
  become: true
  template: src=upstream.conf.j2 dest=/etc/nginx/conf.d/upstream/http_fxa_auth.conf
  notify: reload nginx config

- name: configure nginx location
  become: true
  template: src=nginx.conf.j2 dest=/etc/nginx/conf.d/location/http_fxa_auth.conf
  notify: reload nginx config

- name: create shared mount point for auth-server configuration info
  file: path=/data/config/auth state=directory owner=app group=app mode=0777
  become: true

- name: pull auth-server docker image
  become: true
  docker_image:
    # pull image always. In a pending update to ansible, it will only set
    # changed:true if the image has actually changed. However, docker_container
    # `state:started` will only re-start if image of configuration has
    # changed.
    force: true
    state: present
    name: mozilla/fxa-auth-server
    tag: "{{ auth_docker_tag }}"
  register: image

- debug: var=image

- name: generate public key pair
  become: true
  command: >-
    docker run --rm --net=host -v /data/config/auth:/config
      -e SECRET_KEY_FILE=/config/secret-key.json
      -e PUBLIC_KEY_FILE=/config/public-key.json
    mozilla/fxa-auth-server node scripts/gen_keys.js
    creates=/data/config/auth/secret-key.json

- name: generate vapid keys
  become: true
  command: >-
    docker run --rm --net=host -v /data/config/auth:/config
      -e VAPID_KEYS_FILE=/config/vapid-keys.json
    mozilla/fxa-auth-server node scripts/gen_vapid_keys.js
    creates=/data/config/auth/vapid-keys.json

- name: get sub info
  become: true
  aws_s3:
    region=us-west-2
    bucket=net-mozaws-ops-fxadev
    object=sub-info
    mode=getstr
  register: sub_info
  changed_when: false

- name: Start auth-server docker container
  become: true
  docker_container:
    # See note in https://github.com/mozilla/fxa-dev/tree/docker#about-using-docker_container-and-quoting-of-environment-values
    name: auth-server
    image: mozilla/fxa-auth-server{{ ':' + auth_docker_tag }}
    state: "{{ auth_docker_state }}"
    network_mode: host
    ports:
      - 9000:9000
    command: sh scripts/start-server.sh
    env:
      NODE_ENV: "stage"
      PUBLIC_URL: "{{ auth_public_url }}"
      DB: "mysql"
      MYSQL_HOST: "{{ oauth_db_host }}"
      MYSQL_PASSWORD: "{{ oauth_db_password }}"
      ISSUER: "{{ browserid_issuer }}"
      CONTENT_URL: "{{ content_public_url }}/oauth/"
      AUTH_SERVER_SECRETS: "megaz0rd"
      FXA_OPENID_KEYFILE: "/app/fxa-oauth-server/config/key.json"
      FXA_OPENID_ISSUER: "{{ content_public_url }}"
      FXA_EVENTS_QUEUE_URL: "{{ oauth_queue_url }}"
      FXA_EVENTS_REGION: "{{ region }}"
      JWT_ACCESS_TOKENS_ENABLED_CLIENT_IDS: "98e6508e88680e1a,dcdb5ae7add825d2,1c7882c43994658e,a8c528140153d1c6"
      OAUTH_PROMPT_NONE_ENABLED_CLIENT_IDS: "dcdb5ae7add825d2,7f368c6886429f19,802d56ef2a9af9fa"
      PPID_ENABLED: "false"
      DB_BACKEND: "httpdb"
      DB_POOLEE_TIMEOUT: "{{ auth_db_poolee_timeout | default('5000') }}"
      HTTPDB_URL: "{{ authdb_server_url }}"
      SECRET_KEY_FILE: "/config/secret-key.json"
      PUBLIC_KEY_FILE: "/config/public-key.json"
      VAPID_KEYS_FILE: "/config/vapid-keys.json"
      CUSTOMS_SERVER_URL: "{{ customs_server_url }}"
      CONTENT_SERVER_URL: "{{ content_public_url }}"
      OAUTH_URL: "{{ oauth_public_url }}"
      SMS_USE_MOCK: "true"
      SMS_STATUS_GEO_ENABLED: "false"
      SMTP_HOST: "{{ auth_mail_host }}"
      SMTP_PORT: "{{ auth_mail_port | to_json }}"
      # This MUST be quoted. Otherwise, it becomes pythonic False,
      # which node-convict coerces to `true`.
      SMTP_SECURE: "false"
      SMTP_SENDER: "{{ auth_mail_sender }}"
      SECONDARY_EMAIL_ENABLED: "true"
      SIGNIN_CONFIRMATION_SKIP_FOR_NEW_ACCOUNTS: "{{ auth_signin_confirmation_skip_for_new_accounts | to_json }}"
      REDIRECT_DOMAIN: "{{ auth_redirect_domain | default('firefox.com')}}"
      SIGNIN_CONFIRMATION_FORCE_EMAIL_REGEX: "^(sync.*@restmail\\.net)$"
      SIGNIN_UNBLOCK_FORCED_EMAILS: "^(block.*@restmail\\.net)$"
      SUBSCRIPTIONS_ENABLED: "true"
      SUBSCRIPTIONS_PRODUCT_CAPABILITIES: "{{ subscriptions_product_capabilities | to_json }}"
      SUBSCRIPTIONS_CLIENT_CAPABILITIES: "{{ subscriptions_client_capabilities | to_json }}"
      SUBHUB_ENABLED: "true"
      SUBHUB_KEY: "{{ sub_info.contents }}"
      SUBHUB_URL: "https://dev.fxa.mozilla-subhub.app"
      IP_PROFILING_RECENCY: "{{ auth_ip_profiling_recency | default('0') }}"
      PORT: "{{ auth_private_port | to_json }}"
      SNS_TOPIC_ARN:  "{{ auth_sns_arn }}"
      PROFILE_MESSAGING_REGION: "{{ region }}"
      PROFILE_UPDATES_QUEUE_URL: "{{ profile_update_queue_url | default('') }}"
      LASTACCESSTIME_UPDATES_SAMPLE_RATE: "1"
      PUSHBOX_ENABLED: "{{ auth_pushbox_enabled | to_json }}"
      PUSHBOX_URL: "{{ auth_pushbox_url }}"
      PUSHBOX_KEY: "{{ auth_pushbox_key }}"
      RECOVERY_CODE_COUNT: "{{ auth_recovery_code_count | to_json }}"
      NEW_VAR_6: "false"
    volumes:
      - /data/config/auth:/config
  register: container

- debug: var=container

- name: Start auth-server profile updates notification container
  become: true
  docker_container:
    # See note in https://github.com/mozilla/fxa-dev/tree/docker#about-using-docker_container-and-quoting-of-environment-values
    name: auth-profile-update
    image: mozilla/fxa-auth-server{{ ':' + auth_docker_tag }}
    state: started
    network_mode: host
    ports:
      - 9000:9000
    command: node bin/profile_server_messaging.js
    env:
      NODE_ENV: "stage"
      PUBLIC_URL: "{{ auth_public_url }}"
      DB: "mysql"
      MYSQL_HOST: "{{ oauth_db_host }}"
      MYSQL_PASSWORD: "{{ oauth_db_password }}"
      ISSUER: "{{ browserid_issuer }}"
      CONTENT_URL: "{{ content_public_url }}/oauth/"
      AUTH_SERVER_SECRETS: "megaz0rd"
      FXA_OPENID_KEYFILE: "/app/fxa-oauth-server/config/key.json"
      FXA_OPENID_ISSUER: "{{ content_public_url }}"
      FXA_EVENTS_QUEUE_URL: "{{ oauth_queue_url }}"
      FXA_EVENTS_REGION: "{{ region }}"
      JWT_ACCESS_TOKENS_ENABLED_CLIENT_IDS: "98e6508e88680e1a,dcdb5ae7add825d2,1c7882c43994658e,a8c528140153d1c6"
      OAUTH_PROMPT_NONE_ENABLED_CLIENT_IDS: "dcdb5ae7add825d2,7f368c6886429f19,802d56ef2a9af9fa"
      PPID_ENABLED: "false"
      DB_BACKEND: "httpdb"
      HTTPDB_URL: "{{ authdb_server_url }}"
      SECRET_KEY_FILE: "/config/secret-key.json"
      PUBLIC_KEY_FILE: "/config/public-key.json"
      VAPID_KEYS_FILE: "/config/vapid-keys.json"
      CUSTOMS_SERVER_URL: "{{ customs_server_url }}"
      CONTENT_SERVER_URL: "{{ content_public_url }}"
      OAUTH_URL: "{{ oauth_public_url }}"
      SMTP_HOST: "{{ auth_mail_host }}"
      SMTP_PORT: "{{ auth_mail_port | to_json }}"
      # This MUST be quoted. Otherwise, it becomes pythonic False,
      # which node-convict coerces to `true`.
      SMTP_SECURE: "false"
      SMTP_SENDER: "{{ auth_mail_sender }}"
      SECONDARY_EMAIL_ENABLED: "true"
      SIGNIN_CONFIRMATION_SKIP_FOR_NEW_ACCOUNTS: "{{ auth_signin_confirmation_skip_for_new_accounts | to_json }}"
      REDIRECT_DOMAIN: "{{ auth_redirect_domain | default('firefox.com')}}"
      SIGNIN_CONFIRMATION_FORCE_EMAIL_REGEX: "^sync.*@restmail\\.net$"
      SIGNIN_UNBLOCK_FORCED_EMAILS: "^block.*@restmail\\.net$"
      SUBSCRIPTIONS_ENABLED: "true"
      SUBHUB_ENABLED: "true"
      SUBHUB_KEY: "{{ sub_info.contents }}"
      SUBHUB_URL: "https://dev.fxa.mozilla-subhub.app"
      PORT: "{{ auth_private_port | to_json }}"
      SNS_TOPIC_ARN:  "{{ auth_sns_arn }}"
      PROFILE_MESSAGING_REGION: "{{ region }}"
      PROFILE_UPDATES_QUEUE_URL: "{{ profile_update_queue_url | default('') }}"
    volumes:
      - /data/config/auth:/config
  register: container

- debug: var=container

- meta: flush_handlers
