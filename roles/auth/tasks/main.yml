---

- name: configure nginx upstream
  become: true
  template: src=upstream.conf.j2 dest=/etc/nginx/conf.d/upstream/http_fxa_auth.conf
  notify: reload nginx config

- name: configure nginx location
  become: true
  template: src=nginx.conf.j2 dest=/etc/nginx/conf.d/location/http_fxa_auth.conf
  notify: reload nginx config

- name: create shared mount point for auth-server configuration info
  file: path=/data/config/auth state=directory owner=app group=app mode=0777
  become: true

#XXX obsolete?
- name: create shared mount point for auth-mailer configuration info
  file: path=/data/config/mailer state=directory owner=app group=app mode=0777
  become: true

- name: pull auth-server docker image
  become: true
  docker_image:
    # pull image always. In a pending update to ansible, it will only set
    # changed:true if the image has actually changed. However, docker_container
    # `state:started` will only re-start if image of configuration has
    # changed.
    force: true
    state: present
    name: mozilla/fxa-auth-server
    tag: "{{ auth_docker_tag }}"
  register: image

- debug: var=image

- name: generate public key pair
  become: true
  command: >-
    docker run --rm --net=host -v /data/config/auth:/config
      -e SECRET_KEY_FILE=/config/secret-key.json
      -e PUBLIC_KEY_FILE=/config/public-key.json
    mozilla/fxa-auth-server node scripts/gen_keys.js
    creates=/data/config/auth/secret-key.json

- name: generate vapid keys
  become: true
  command: >-
    docker run --rm --net=host -v /data/config/auth:/config
      -e VAPID_KEYS_FILE=/config/vapid-keys.json
    mozilla/fxa-auth-server node scripts/gen_vapid_keys.js
    creates=/data/config/auth/vapid-keys.json

- name: Start auth-server docker container
  become: true
  docker_container:
    name: auth-server
    image: mozilla/fxa-auth-server{{ ':' + auth_docker_tag }}
    state: "{{ auth_docker_state }}"
    network_mode: host
    ports:
      - 9000:9000
    command: sh scripts/start-server.sh
    env:
      NODE_ENV: "stage"
      PUBLIC_URL: "{{ auth_public_url }}"
      DB_BACKEND: "httpdb"
      HTTPDB_URL: "{{ authdb_server_url }}"
      SECRET_KEY_FILE: "/config/secret-key.json"
      PUBLIC_KEY_FILE: "/config/public-key.json"
      VAPID_KEYS_FILE: "/config/vapid-keys.json"
      CUSTOMS_SERVER_URL: "{{ customs_server_url }}"
      CONTENT_SERVER_URL: "{{ content_public_url }}"
      SMS_USE_MOCK: "true",
      SMS_STATUS_GEO_ENABLED: "false",
      SMTP_HOST: "{{ auth_mail_host }}"
      SMTP_PORT: "{{ auth_mail_port }}"
      # This MUST be quoted. Otherwise, it becomes pythonic False,
      # which node-convict coerces to `true`.
      SMTP_SECURE: "false"
      SMTP_SENDER: "{{ auth_mail_sender }}"
      SECONDARY_EMAIL_ENABLED: "true"
      REDIRECT_DOMAIN: "firefox.com"
      VERIFICATION_REMINDER_RATE: 1
      SIGNIN_CONFIRMATION_FORCE_EMAIL_REGEX: "^(sync.*@restmail\\.net|.+@mozilla\\.com)$"
      SIGNIN_UNBLOCK_FORCED_EMAILS: "^(block.*@restmail\\.net|.+@mozilla\\.com)$"
      # Disable IP Profiling, see https://github.com/mozilla/fxa-auth-server/blob/0ece36baa80c5128f9135afcba04d00922a9e0cb/config/dev.json#L28
      IP_PROFILING_RECENCY: 0
      PORT: "{{ auth_private_port }}"
      SNS_TOPIC_ARN:  "{{ auth_sns_arn }}"
      PROFILE_MESSAGING_REGION: "{{ region }}"
      PROFILE_UPDATES_QUEUE_URL: "{{ profile_update_queue_url | default('') }}"
    volumes:
      - /data/config/auth:/config
  register: container

- debug: var=container

- name: Start auth-mailer docker container
  become: true
  docker_container:
    name: auth-mailer
    image: mozilla/fxa-auth-server{{ ':' + auth_docker_tag }}
    state: "{{ auth_docker_state }}"
    network_mode: host
    ports:
      - "{{ auth_mailer_port }}:{{ auth_mailer_port }}"
    command: node bin/mailer_server.js
    env:
      NODE_ENV: "stage"
      MAILER_PORT: "{{ auth_mailer_port }}"
      CONTENT_SERVER_URL: "{{ content_public_url }}"
      IP_ADDRESS: "{{ auth_mail_host }}"
      PORT: "{{ auth_mail_port }}"
      # This MUST be quoted. Otherwise, it becomes pythonic `False`,
      # which node-convict coerces to `true`.
      MAIL_HTTPS_SECURE: "false"
      SMTP_SENDER: "{{ auth_mail_sender }}"
      VERIFICATION_REMINDER_TIME_FIRST: 20000
      VERIFICATION_REMINDER_TIME_SECOND: 40000
    volumes:
      - /data/config/mailer:/config
  register: container

- debug: var=container

- name: Start auth-server profile updates notification container
  become: true
  docker_container:
    name: auth-profile-update
    image: mozilla/fxa-auth-server{{ ':' + auth_docker_tag }}
    state: started
    network_mode: host
    ports:
      - 9000:9000
    command: node bin/profile_server_messaging.js
    env:
      NODE_ENV: "stage"
      PUBLIC_URL: "{{ auth_public_url }}"
      DB_BACKEND: "httpdb"
      HTTPDB_URL: "{{ authdb_server_url }}"
      SECRET_KEY_FILE: "/config/secret-key.json"
      PUBLIC_KEY_FILE: "/config/public-key.json"
      VAPID_KEYS_FILE: "/config/vapid-keys.json"
      CUSTOMS_SERVER_URL: "{{ customs_server_url }}"
      CONTENT_SERVER_URL: "{{ content_public_url }}"
      SMTP_HOST: "{{ auth_mail_host }}"
      SMTP_PORT: "{{ auth_mail_port }}"
      # This MUST be quoted. Otherwise, it becomes pythonic False,
      # which node-convict coerces to `true`.
      SMTP_SECURE: "false"
      SMTP_SENDER: "{{ auth_mail_sender }}"
      SECONDARY_EMAIL_ENABLED: "true"
      REDIRECT_DOMAIN: "firefox.com"
      VERIFICATION_REMINDER_RATE: 1
      SIGNIN_CONFIRMATION_FORCE_EMAIL_REGEX: "^(sync.*@restmail\\.net|.+@mozilla\\.com)$"
      SIGNIN_UNBLOCK_FORCED_EMAILS: "^(block.*@restmail\\.net|.+@mozilla\\.com)$"
      PORT: "{{ auth_private_port }}"
      SNS_TOPIC_ARN:  "{{ auth_sns_arn }}"
      PROFILE_MESSAGING_REGION: "{{ region }}"
      PROFILE_UPDATES_QUEUE_URL: "{{ profile_update_queue_url | default('') }}"
    volumes:
      - /data/config/auth:/config
  register: container

- debug: var=container

- meta: flush_handlers
