---

- name: configure nginx upstream
  become: true
  template: src=upstream.conf.j2 dest=/etc/nginx/conf.d/upstream/http_fxa_graphql_api.conf
  notify: reload nginx config

- name: pull fxa-graphql-api docker image
  become: true
  docker_image:
    # pull image always. In a pending update to ansible, it will only set
    # changed:true if the image has actually changed. However, docker_container
    # `state:started` will only re-start if image of configuration has
    # changed.
    force: true
    state: present
    name: mozilla/fxa-mono
    tag: "{{ graphql_api_docker_tag }}"
  register: image

- debug: var=image

- name: Start fxa-graphql-api docker container
  become: true
  docker_container:
    # See note in https://github.com/mozilla/fxa-dev/tree/docker#about-using-docker_container-and-quoting-of-environment-values
    name: graphql-api
    image: mozilla/fxa-mono{{ ':' + graphql_api_docker_tag }}
    state: "{{ graphql_api_docker_state }}"
    network_mode: host
    ports:
      - "{{ graphql_api_private_port }}:{{ graphql_api_private_port }}"
    working_dir: /fxa/packages/fxa-graphql-api/dist/fxa-graphql-api/src
    command: node bin/main.js
    env:
      # using development to start; may switch to production
      NODE_ENV: "development"
      AUTH_SERVER_URL: "{{ auth_public_url }}"
      PROFILE_SERVER_URL: "{{ profile_public_url }}"
      ACCESS_TOKEN_REDIS_HOST: 127.0.0.1
      SENTRY_DSN: ''
      AUTH_MYSQL_DATABASE: fxa
      AUTH_MYSQL_HOST: "{{ authdb_primary_host }}"
      AUTH_MYSQL_USERNAME: root
      AUTH_MYSQL_PASSWORD: "{{ authdb_primary_password }}"
      OAUTH_MYSQL_DATABASE: fxa_oauth
      OAUTH_MYSQL_HOST: "{{ oauth_db_host }}"
      OAUTH_MYSQL_USERNAME: root
      OAUTH_MYSQL_PASSWORD: "{{ oauth_db_password }}"
      PROFILE_MYSQL_DATABASE: fxa_profile
      PROFILE_MYSQL_HOST: "{{ profile_db_host }}"
      PROFILE_MYSQL_USERNAME: root
      PROFILE_MYSQL_PASSWORD: "{{ profile_db_password }}"

  register: container

- debug: var=container

- meta: flush_handlers
